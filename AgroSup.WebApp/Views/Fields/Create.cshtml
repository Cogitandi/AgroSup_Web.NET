@model AgroSup.WebApp.ViewModels.Fields.FieldViewModel

@{
    ViewData["Title"] = "Pole";
    ViewData["Header"] = "Utwórz nowe pole";
    ViewData["ActivePage"] = ManageMenu.FieldAdd;
    var message = @TempData["message"];
}
<!--- Content -->
<div class="row">
    <partial name="_DataMenuPartial" />
    <div class="col-md-10">
        <div class="container-md mx-4">
            <p class="text-center" id="headerTitle">@ViewData["Header"]</p>
            <hr />
            @if (message != null)
            {
                <partial name="_StatusMessage" model="message.ToString()" />
            }
            <form asp-action="Create" id="form">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Number" class="control-label"></label>
                    <input asp-for="Number" class="form-control" />
                    <small class="form-text text-muted">Podaj imię osoby, która zarządza gospodarstwem.</small>
                    <span asp-validation-for="Number" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <small class="form-text text-muted">Podaj imię osoby, która zarządza gospodarstwem.</small>
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <h6>Działki</h6>
                <input class="btn btn-info mb-2" type="button" id="addParcel" value="Dodaj działke" />
                <div id="parcels">
                    @Html.EditorFor(modelItem => modelItem.Parcels)
                </div>

                <div class="form-group mt-2">
                    <input type="submit" value="Utwórz pole" class="btn btn-primary" />
                    @Html.ActionLink("Powrót", "Index", new { },new { @class="btn btn-info"})
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <style type="text/css">
        @@media (max-width: 930px) {
            .form-inline {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
}

@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js//markValidationErrors.js"></script>

    <script>
  $(function() {
    // delete extra hidden fields created by checkboxes as the grid links mess this up by doubling the querystring parameters
    $("input[type='hidden'][name$='FuelApplication']").remove();
  });

$("#addParcel").on("click", function() {
  $.ajax({
    async: true,
    data: $("#form").serialize(),
    type: "POST",
    url: '@Url.Action("AddParcel", "Fields")',
    success: function(partialView) {
      $('#parcels').html(partialView);
      markValidationErrors();
    }
  });
});

function removeParcel() {
  var indexToRemove = $(this).parent().parent().prevAll().length;
  $.ajax({
    async: true,
    data: $("#form").serialize() + "&index=" + indexToRemove,
    type: "POST",
    url: '@Url.Action("RemoveParcel", "Fields")',
    success: function(partialView) {
      $('#parcels').html(partialView);
    }
  });
  event.preventDefault();
}
    </script>
}
